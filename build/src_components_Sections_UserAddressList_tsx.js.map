{"version":3,"file":"src_components_Sections_UserAddressList_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACF;AACD;AACD;AACA;AAAA;AAAA;AAI7C,IAAMU,eAAyC,GAAG,SAA5CA,eAAyCA,CAAIC,KAAK,EAAK;EAAAC,GAAA;EAC3D,IAAAC,SAAA,GAAoCZ,+CAAQ,CAAS,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,aAAa,GAAGlB,6CAAM,CAAS,CAAC;EAEtC,IAAMmB,YAAY,GAAG,SAAfA,YAAYA,CAAIC,CAAsC,EAAK;IAC/DF,aAAa,CAACG,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;EACxC,CAAC;EACD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,GAAW;IAAA,OAAK,YAAM;MAC7C,IAAIA,GAAG,KAAKT,UAAU,EAAE;QACtB,IAAIE,aAAa,CAACG,OAAO,EAAE;UACzB;UACAH,aAAa,CAACG,OAAO,GAAG,EAAE;QAC5B;QACAJ,aAAa,CAACS,SAAS,CAAC;MAC1B,CAAC,MAAM;QACLR,aAAa,CAACG,OAAO,GAAG,EAAE;QAC1BJ,aAAa,CAACQ,GAAG,CAAC;MACpB;IACF,CAAC;EAAA;EAED,oBACEhB,uDAAA;IAAKkB,SAAS,EAAEtB,yEAAO;IAAAwB,QAAA,gBACrBtB,sDAAA;MAAIoB,SAAS,EAAEtB,2EAAS;MAAAwB,QAAA,EAAC;IAAU,CAAI,CAAC,eACxCtB,sDAAA;MAAIoB,SAAS,EAAEtB,yEAAO;MAAAwB,QAAA,EACnBzB,4DAAa,CAAC,UAAC6B,EAAE,EAAEC,CAAC;QAAA,oBACnBzB,uDAAA;UAAakB,SAAS,EAAEtB,yEAAO;UAAAwB,QAAA,gBAC7BtB,sDAAA;YACE6B,QAAQ,EAAEF,CAAC,KAAKlB,UAAW;YAC3BqB,YAAY,EAAEJ,EAAG;YACjBK,QAAQ,EAAEnB;UAAa,CACxB,CAAC,eACFZ,sDAAA;YAAQgC,OAAO,EAAEf,eAAe,CAACU,CAAC,CAAE;YAAAL,QAAA,EACjCb,UAAU,KAAKkB,CAAC,gBAAG3B,sDAAA,CAACL,0DAAc,IAAE,CAAC,gBAAGK,sDAAA,CAACJ,yDAAa,IAAE;UAAC,CACpD,CAAC;QAAA,GARF8B,EASL,CAAC;MAAA,CACN;IAAC,CACA,CAAC;EAAA,CACF,CAAC;AAEV,CAAC;AAAArB,GAAA,CAvCKF,eAAyC;AAAA8B,EAAA,GAAzC9B,eAAyC;AAyC/C,iEAAeA,eAAe;AAAA,IAAA8B,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChD9B,iEAAe,CACb,kDAAkD,EAClD,2DAA2D,EAC3D,yDAAyD,CAC1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD;AACA,iEAAe,CAAC,0HAA0H","sources":["webpack://calc/./src/components/Sections/UserAddressList.tsx","webpack://calc/./src/mocks/addresses.ts","webpack://calc/./src/components/Sections/UserAddressList.module.scss?6f3e"],"sourcesContent":["import { useRef, useState, type FC } from 'react'\r\nimport { AiOutlineCheck } from 'react-icons/ai'\r\nimport { MdOutlineEdit } from 'react-icons/md'\r\nimport addresses from '../../mocks/addresses'\r\nimport s from './UserAddressList.module.scss'\r\n\r\ninterface UserAddressListProps {}\r\n\r\nconst UserAddressList: FC<UserAddressListProps> = (props) => {\r\n  const [editingIdx, setEditingIdx] = useState<number>()\r\n  const inputValueRef = useRef<string>()\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    inputValueRef.current = e.target.value\r\n  }\r\n  const handleEditClick = (idx: number) => () => {\r\n    if (idx === editingIdx) {\r\n      if (inputValueRef.current) {\r\n        // onAddressEditSave(idx, inputValueRef.current);\r\n        inputValueRef.current = ''\r\n      }\r\n      setEditingIdx(undefined)\r\n    } else {\r\n      inputValueRef.current = ''\r\n      setEditingIdx(idx)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      <h4 className={s.header}>My Address</h4>\r\n      <ul className={s.list}>\r\n        {addresses.map((el, i) => (\r\n          <li key={el} className={s.item}>\r\n            <input\r\n              disabled={i !== editingIdx}\r\n              defaultValue={el}\r\n              onChange={handleChange}\r\n            />\r\n            <button onClick={handleEditClick(i)}>\r\n              {editingIdx === i ? <AiOutlineCheck /> : <MdOutlineEdit />}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserAddressList\r\n","\r\nexport default [\r\n  \"Университетский пр., 6к1, Москва, Россия, 119333\",\r\n  \"Электролитный пр-д, 3 строение 23, Москва, Россия, 115230\",\r\n  \"ул. Симоновский Вал, 7 корпус 1, Москва, Россия, 109044\"\r\n]\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"QKyMr7mEQ2UjOmvX5Dt4\",\"header\":\"wblbx4rS6g0jBHg2WHXQ\",\"list\":\"NySRq9NzBdE533MNAbkZ\",\"item\":\"sXp5x_am3CcwarBUIs0t\"};"],"names":["useRef","useState","AiOutlineCheck","MdOutlineEdit","addresses","s","jsx","_jsx","jsxs","_jsxs","UserAddressList","props","_s2","_useState","_useState2","_slicedToArray","editingIdx","setEditingIdx","inputValueRef","handleChange","e","current","target","value","handleEditClick","idx","undefined","className","main","children","header","list","map","el","i","item","disabled","defaultValue","onChange","onClick","_c","$RefreshReg$"],"sourceRoot":""}